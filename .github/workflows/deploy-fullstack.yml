name: Deploy Full Stack App - Token Test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  AZURE_WEBAPP_NAME: real-estate-api-ig25
  AZURE_WEBAPP_PACKAGE_PATH: "Backend/RealEstate/RealEstate.WebApi"
  NODE_VERSION: "20"
  DOTNET_VERSION: "8.0.x"

jobs:
  # Backend Job
  backend:
    runs-on: ubuntu-latest
    name: Build and Deploy Backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Install Entity Framework Tools
        run: dotnet tool install --global dotnet-ef

      - name: Restore dependencies
        run: |
          cd ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
          dotnet restore

      - name: Build
        run: |
          cd ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
          dotnet build --configuration Release --no-restore

      - name: Test
        run: |
          cd Backend/RealEstate
          dotnet test --no-build --verbosity normal

      - name: Publish
        run: |
          cd ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
          dotnet publish -c Release -o ./publish

      - name: Run Database Migrations
        run: |
          cd ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
          dotnet ef database update --connection "${{ secrets.REDATABASE_CONNECTION_STRING }}" --verbose

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/publish

  # Frontend Job
  frontend:
    runs-on: ubuntu-latest
    name: Build and Deploy Frontend
    needs: backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: |
          cd Frontend/real-estate-front
          pnpm install --frozen-lockfile

      - name: Build
        run: |
          cd Frontend/real-estate-front
          pnpm run build

      - name: Deploy to Azure Static Web Apps
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_WHITE_DESERT_039FF0703 }}
          action: "upload"
          app_location: "./Frontend/real-estate-front"
          output_location: "dist"
          skip_app_build: true
